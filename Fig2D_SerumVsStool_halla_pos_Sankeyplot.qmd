---
title: "Sankey_plot"
format: html
editor: visual
---

```{r}
#| message: false

library(tidyverse)
library(ggplot2)
library(ggsankey)
```

```{r}
#| message: false
#| echo: false

folder_name <- "halla_res2_SerumVsStool_fdr005"
type1 <- "Serum"
type2 <- "Stool"

data1 <- 
  paste0("./HALLA/", folder_name, "/hallagram_", type1, "_metabolites.csv") |> 
  read_csv()

data2 <- 
  paste0("./HALLA/", folder_name, "/hallagram_", type2, "_metabolites.csv") |> 
  read_csv()

hallagram0 <- 
  paste0("./HALLA/", folder_name, "/all_associations.txt") |> 
  read_tsv()
```

Filter the HAllA results to include only metabolites in the original Hallagram & only positive correlations:

```{r}
#| message: false

hallagram <- hallagram0 |> 
  filter(X_features %in% data1$Serum_metabolites) |> 
  filter(Y_features %in% data2$Stool_metabolites) |> 
  filter(`q-values` < 0.05) |> 
  filter(association > 0)

names(hallagram)[1:2] <- c(type1, type2)
```

```{r}
#| message: false

filtered_long <- 
  hallagram |> make_long(names(hallagram)[1], names(hallagram)[2]) |> 
  arrange(x,node) |>
  mutate(labels = node)

source("./Functions/add_hmdb_classification.R")
filtered_long1 <- 
  add_hmdb_classification(filtered_long |> rename(Feature = node)
                        , n_class = 13) |> 
  rename(node = Feature)

filtered_long1 <- filtered_long1 |> group_by(x, node) |> 
  arrange(x,Final_Class3, by_group = TRUE) |> 
  mutate(node = paste0(x, node),
         next_node = paste0(next_x, next_node))

filtered_long1$node <- factor(filtered_long1$node, 
                              levels = filtered_long1$node |> unique())

myPalette1 <- hmdb_palette(filtered_long1)
```

```{r}
#| message: false

pl <- filtered_long1 |> 
  ggplot(aes(x = x,
             next_x = next_x, 
             node = node, 
             next_node = next_node,
             label = labels, 
             fill = Final_Class3
             )) +
  geom_sankey(flow.fill = "#F4A582",
              flow.alpha = 0.25
              , width = 0.02
              ,show.legend = FALSE) +
 scale_fill_manual(values = myPalette1) +
  geom_sankey_text(
    data = filtered_long1 |> 
      mutate(labels = ifelse(x == type1, paste0(labels,"    "), ""))
    , size = 3.5, hjust = 1
    , vjust = 0) +
  geom_sankey_text(data = filtered_long1 |> 
                     mutate(labels = 
                            ifelse(x == type2 
                                 , paste0("   ", labels), ""))
                    , size = 3.5, hjust = -0.0
                   , vjust = 0.09) +
  theme_sankey(base_size = 16) + 
  theme(legend.position = "none"
        , axis.text = element_blank()
        , axis.ticks = element_blank()
        , axis.title = element_blank()
        , plot.background = element_blank()
        , panel.background = element_blank()
        , panel.grid = element_blank()
        )
pl
```

```{r}

source("./Functions/Save_pptx.R")
create_pptx(plot =pl, 
            path = "./R_figures/SerumVsStool_sankey.pptx"
            , left = 0.5, top = 1, width = 9, height = 6)
```

```{r}
#| message: false

ggsave("./R_figures/Hallagram_pos_SerumVsStool_Saneky.png",
       height = 8.5, width = 9.95, scale = 0.85)
```
